# Generated by Django 5.0.12 on 2025-03-05 16:21

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models

# [REF:22c3d4e5-f6a7-b8c9-d0e1-f2a3b4c5d6e7:EXPERIENCE_SYSTEM]
# [CLAUDE:CHECK_PATTERN:matrix_flow]
# [CLAUDE:CHECK_PATTERN:experience_progression]
# [CLAUDE:CHECK_PATTERN:zone_geographic_patterns]
# [CLAUDE:OPTIMIZATION_LAYER:START]
# This file is part of the experience_system component
# See .claude/README.md for more information
# [CLAUDE:OPTIMIZATION_LAYER:END]


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0005_remove_userlocation_current_zone_id_and_more'),
        ('experiences', '0002_experience_latitude_experience_longitude'),
        ('zones', '0003_remove_zonehappiness_friendships_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExperienceInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, help_text='Optional custom name for this instance. Defaults to experience name.', max_length=255)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('frequency', models.CharField(choices=[('once', 'One-time'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('custom', 'Custom Schedule')], default='once', max_length=10)),
                ('recurrence_rule', models.JSONField(blank=True, default=dict, help_text='JSON data for recurring instances')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=10)),
                ('capacity', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('current_participants', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_public', models.BooleanField(default=True)),
                ('location_description', models.CharField(blank=True, max_length=255)),
                ('meeting_point', models.JSONField(blank=True, default=dict, help_text='JSON data for specific meeting coordinates')),
                ('current_matrix_phase', models.CharField(blank=True, choices=[('soul_out', 'Soul Out (Think Tank)'), ('soul_in', 'Soul In (Review)'), ('body_out', 'Body Out (Production Tank)'), ('body_in', 'Body In (Market)')], max_length=10, null=True)),
                ('matrix_flow_data', models.JSONField(blank=True, default=dict, help_text='Data tracking the flow through different matrix quadrants')),
                ('resources_provided', models.JSONField(blank=True, default=dict)),
                ('outcomes', models.JSONField(blank=True, default=dict, help_text='Aggregate outcomes across all participants')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('experience', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='experiences.experience')),
                ('host', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hosted_experiences', to='core.playerprofile')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='zone_experience_instances', to='zones.zone')),
            ],
            options={
                'verbose_name': 'Experience Instance',
                'verbose_name_plural': 'Experience Instances',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='ExperienceParticipation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('invited', 'Invited'), ('active', 'Active'), ('completed', 'Completed'), ('withdrawn', 'Withdrawn')], default='invited', max_length=10)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('withdrawn_at', models.DateTimeField(blank=True, null=True)),
                ('contributions', models.JSONField(blank=True, default=dict)),
                ('personal_outcomes', models.JSONField(blank=True, default=dict)),
                ('feedback', models.TextField(blank=True)),
                ('satisfaction_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('happiness_gained', models.IntegerField(default=0)),
                ('experience_gained', models.IntegerField(default=0)),
                ('resources_gained', models.JSONField(blank=True, default=dict)),
                ('individual_flow_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participations', to='experiences.experienceinstance')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experience_participations', to='core.playerprofile')),
            ],
            options={
                'verbose_name': 'Experience Participation',
                'verbose_name_plural': 'Experience Participations',
                'ordering': ['-joined_at'],
                'unique_together': {('instance', 'player')},
            },
        ),
    ]
